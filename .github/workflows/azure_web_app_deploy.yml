name: Build and deploy Python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: friendsapp-backend-dev # set this to your application's name
  PYTHON_VERSION: '3.12.4'               # set this to the Python version to use


on:
  push:
    branches:
      - main
      - develop # DELETE
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  # Have to create the .env file that our frontend application uses
#  create_env:
#    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
#    runs-on: ubuntu-latest
#    name: Create Env
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: true
#      - name: Create Env
#        run: | 
#          #!/bin/bash
#          touch .env
#          echo sql_pw=${{ secrets.SQL_PW }} >> .env
#          echo sql_user=${{ secrets.SQL_USER }} >> .env
#          echo sql_host_db=${{ secrets.SQL_HOST_DB}} >> .env
#          cat .env
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add a step to run tests here (PyTest, Django test suites, etc.)

      - name: Create Env
        run: | 
          #!/bin/bash
          touch .env
          echo sql_pw=${{ secrets.SQL_PW }} >> .env
          echo sql_user=${{ secrets.SQL_USER }} >> .env
          echo sql_host_db=${{ secrets.SQL_HOST_DB}} >> .env

      - name: Check .env
        run: |
          #!/bin/bash
          cat .env
          if [[ ! -f ".env" ]]; then
              exit 1
          fi

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/

  # Deploy to the staging web app slot
  deploy_staging:
    if: (github.event_name == 'push' && github.ref != 'refs/heads/develop') || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}

#  # Deploy to the production (default) web app slot
#  deploy_prod:
#    if: (github.event_name == 'push' && github.ref == 'refs/heads/main')
#    runs-on: ubuntu-latest
#    needs: build
#    environment:
#      name: 'production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#
#    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v4
#        with:
#          name: python-app
#          path: .
#
#      - name: 'Deploy to Azure Web App'
#        id: deploy-to-webapp
#        uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
#        with:
#          app-name: ${{ env.AZURE_WEBAPP_NAME }}
#          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#
#